from telebot import types
import telebot
import tweepy
from db import Database
bot = telebot.TeleBot('7088931319:AAH2DG5rBSR4zD5-_Qc7U7QcgFx1-kX20sw')
db = Database('database.db')

CONSUMER_KEY = '9TxOVR0OCKwCiQnFTYm1NXECN'
CONSUMER_SECRET = '4GvKKhIU2bpuUCV83XOae6OvyQ78UsbiCapxNiOFe2VMxC25c3'
ACCESS_TOKEN = '1194608150311317504-vkUlgp5WUaDpk30b6r21PQXrvt1XSe'
ACCESS_TOKEN_SECRET = 'bOdJIfL8GVB62NMvShwUw1Lt9vRZcJurrEZQfqJPeU4Wg'

auth = tweepy.OAuth1UserHandler(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_TOKEN, ACCESS_TOKEN_SECRET)
api = tweepy.API(auth)


def process_repost_link(message):
    repost_link = message.text
    # –ü–æ–ª—É—á–∞–µ–º id –ø–æ—Å—Ç–∞ –∏–∑ —Å—Å—ã–ª–∫–∏
    tweet_id = repost_link.split('/')[-1].split('?')[0]
    try:
        tweet = api.get_status(tweet_id)
        retweets = api.retweets(tweet_id)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–ø–æ—Å—Ç–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ—Ç –ø–æ—Å—Ç
        reposted = any(retweet.user.id == message.from_user.id for retweet in retweets)
        if reposted:
            bot.send_message(message.chat.id, "–î–∞, –≤—ã —Ä–µ–ø–æ—Å—Ç–∏–ª–∏ —ç—Ç–æ—Ç –ø–æ—Å—Ç.")
        else:
            bot.send_message(message.chat.id, "–ù–µ—Ç, –≤—ã –Ω–µ —Ä–µ–ø–æ—Å—Ç–∏–ª–∏ —ç—Ç–æ—Ç –ø–æ—Å—Ç.")
    except tweepy.TweepError as e:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–ø–æ—Å—Ç–∞.")


def start_markup():
    markup = types.InlineKeyboardMarkup(row_width=True)
    link_keyboard1 = types.InlineKeyboardButton(text="–ö–∞–Ω–∞–ª", url="https://t.me/checkthepepebot")
    check_keyboard = types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å‚úÖ", callback_data="check")
    markup.add(link_keyboard1, check_keyboard)
    return markup


def main_menu_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –ö–æ–ª–æ–Ω–∫–∞ 1
    terms_button = types.KeyboardButton("–£—Å–ª–æ–≤–∏—è/Termsüìë")
    balance_button = types.KeyboardButton("–ë–∞–ª–∞–Ω—Å/Balanceüê∏")
    # –ö–æ–ª–æ–Ω–∫–∞ 2
    wallet_button = types.KeyboardButton("–ö–æ—à–µ–ª–µ–∫/Walletüëõ")
    bonus_button = types.KeyboardButton("Twitter [BONUS]üê¶")
    # –ö–æ–ª–æ–Ω–∫–∞ 3
    english_terms_button = types.KeyboardButton("Terms [ENG]")

    markup.row(terms_button, balance_button)
    markup.row(wallet_button, bonus_button)
    markup.row(english_terms_button)

    return markup


@bot.message_handler(commands=["start"])
def start(message):
    chat_id = message.chat.id
    first_name = message.chat.first_name

    if not db.user_exists(message.from_user.id):
        start_command = message.text
        referrer_id = str(start_command[7:])
        if str(referrer_id) != "":
            if str(referrer_id) != str(chat_id):
                db.add_user(message.from_user.id, referrer_id)

                try:
                    bot.send_message(referrer_id, "–ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n")
                except:
                    pass
            else:
                db.add_user(message.from_user.id)

                bot.send_message(message.from_user.id, '–ù–µ–ª—å–∑—è —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!')
    else:

        bot.send_message(chat_id, f'–ü—Ä–∏–≤–µ—Ç! {first_name}! \n'
                          f'–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!', reply_markup=start_markup())



def check(call):
    status = ['creator', 'administrator', 'member']
    try:
        if bot.get_chat_member(chat_id='-1002129297743',
                               user_id=call.message.chat.id).status == 'creator' or bot.get_chat_member(
                chat_id='-1002129297743', user_id=call.message.chat.id).status == 'administrator' or bot.get_chat_member(
                chat_id='-1002129297743', user_id=call.message.chat.id).status == 'member':
            bot.send_message(call.message.chat.id, "üîù –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é")
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º AIRDROP PEPE COIN
            bot.send_photo(call.message.chat.id, photo=open('photo_2024-04-13_14-02-45.jpg', 'rb'),
                           caption="AIRDROP PEPE COIN üê∏\n\n200 $PEPE - –∑–∞ –æ–¥–Ω–æ–≥–æ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ ? üò±\n"
                                   "–≠—Ç–æ —Å–∞–º—ã–µ –ª—É—á—à–∏–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –º–∞—Å—à—Ç–∞–±–Ω–æ–≥–æ AIRDOP !\n\n"
                                   "–ù–∏—á–µ–≥–æ –ø—Ä–æ—â–µ –Ω–µ –±—ã–≤–∞–µ—Ç! –ê–±—Å–æ–ª—é—Ç–Ω–æ –∫–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–ª—É—á–∏—Ç DROP –æ—Ç PEPE üê∏\n"
                                   "–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø—É ¬´—É—Å–ª–æ–≤–∏—è¬ª, —Ç–∞–º –≤—Å–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏! –í–ø–µ—Ä–µ–¥!\n\n"
                                   "@checkthepepebot", reply_markup=main_menu_markup())
        else:
            bot.send_message(call.message.chat.id, f'–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!', reply_markup=start_markup())
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ check: {e}")



@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.data == 'check':
        check(call)

    elif call.data == 'terms':
        bot.answer_callback_query(call.id, text="–í—ã –≤—ã–±—Ä–∞–ª–∏ –£—Å–ª–æ–≤–∏—è/Termsüìë")
    elif call.data == 'balance':
        bot.answer_callback_query(call.id, text="–í—ã –≤—ã–±—Ä–∞–ª–∏ –ë–∞–ª–∞–Ω—Å/Balanceüê∏")
    elif call.data == 'wallet':
        bot.answer_callback_query(call.id, text="–í—ã –≤—ã–±—Ä–∞–ª–∏ –ö–æ—à–µ–ª–µ–∫/Walletüëõ")
    elif call.data == 'bonus':
        bot.answer_callback_query(call.id, text="–í—ã –≤—ã–±—Ä–∞–ª–∏ Twitter [BONUS]üê¶")
    elif call.data == 'english_terms':
        bot.answer_callback_query(call.id, text="–í—ã –≤—ã–±—Ä–∞–ª–∏ Terms [ENG]")


# –î–æ–±–∞–≤–∏–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu


def send_terms(message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ —Ç–µ–∫—Å—Ç–æ–º
    bot.send_photo(message.chat.id, photo=open('photo_2024-04-13_14-41-27.jpg', 'rb'),
                   caption="–£–°–õ–û–í–ò–Ø \ TERMS üìÉ\n\n"
                           "–£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è –≤ AIRDROP –Ω–µ –±—ã–ª–∏ –µ—â–µ —Ç–∞–∫–∏–º–∏ –ø—Ä–æ—Å—Ç—ã–º–∏ üò±\n"
                           "–ê–±—Å–æ–ª—é—Ç–Ω–æ –∫–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–ª—É—á–∏—Ç —Ç–æ–∫–µ–Ω—ã $PEPE üî•\n\n"
                           "–ß—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n"
                           "1. –ë—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –∫–∞–Ω–∞–ª: @checkthepepebot\n"
                           "2. –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤—Å–µ—Ö –¥—Ä—É–∑–µ–π\n\n"
                           "–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 200 $PEPE\n"
                           "–ß—Ç–æ–±—ã —É–¥–≤–æ–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –±–æ–Ω—É—Å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ –≤–æ –≤–∫–ª–∞–¥–∫–µ Twitter [BONUS]\n\n"
                           "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π –ø–æ –≤–∞—à–µ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ: "
                           f'https://t.me/Pepecryptocurrencybot?start={message.from_user.id}\n',

                   reply_markup=invite_friend_markup(message))

def send_terms_eng(message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ —Ç–µ–∫—Å—Ç–æ–º
    bot.send_photo(message.chat.id, photo=open('photo_2024-04-13_14-41-27.jpg', 'rb'),
                   caption="The conditions of participation in AIRDROP have never been so simple üò±\n"
                           "Absolutely every participant will receive $PEPE tokens üî•\n\n"
                           "To participate, you need to:\n"
                           "1. be subscribed to the channel: @checkthepepebot\n"
                           "2. Invite all your friends\n\n"
                           "For each friend you refer, you will receive 200 $PEPE.\n"
                           "To double your referral balance, fulfill the additional bonus condition in the Twitter tab [BONUS].\n\n"
                           "You can invite friends via your personal referral link: "
                           f'https://t.me/Pepecryptocurrencybot?start={message.from_user.id}',
                   reply_markup=invite_friend_markup(message))
def send_balance(message):
    user_id = message.from_user.id
    repost_status = db.get_repost_status(user_id)
    #–ï—Å–ª–∏ –∑–∞—Ä–µ–ø–æ—Å—Ç–∏–ª —Ç–æ –Ω–µ —É–¥–≤–∞–∏–≤–∞–µ—Ç—Å—è
    if repost_status == 0:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ —Ç–µ–∫—Å—Ç–æ–º
        bot.send_photo(message.chat.id, photo=open('photo_2024-04-13_15-05-13.jpg', 'rb'),
                       caption=f"–í–∞—à –±–∞–ª–∞–Ω—Å: {db.count_referrals(user_id) * 200} $PEPE\n1 ref. = 200 $PEPE\n\n"
                               "–ß—Ç–æ–±—ã —É–º–Ω–æ–∂–∏—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞ —Ö2, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Å—Ç–æ–µ —É—Å–ª–æ–≤–∏–µ –≤–æ –≤–∫–ª–∞–¥–∫–µ Twitter\n\n"
                               "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π üëáüèº",
                       reply_markup=invite_friend_markup(message))
    elif repost_status == 1:
        bot.send_photo(message.chat.id, photo=open('photo_2024-04-13_15-05-13.jpg', 'rb'),
                       caption=f"–í–∞—à –±–∞–ª–∞–Ω—Å: {db.count_referrals(user_id) * 200 * 2} $PEPE\n1 ref. = 200 $PEPE\n\n"
                               "–ß—Ç–æ–±—ã —É–º–Ω–æ–∂–∏—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞ —Ö2, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Å—Ç–æ–µ —É—Å–ª–æ–≤–∏–µ –≤–æ –≤–∫–ª–∞–¥–∫–µ Twitter\n\n"
                               "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π üëáüèº",
                       reply_markup=invite_friend_markup(message))

def send_cancel_button(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    cancel_button = types.KeyboardButton("‚ùå–û—Ç–º–µ–Ω–∞")
    markup.add(cancel_button)
    bot.send_message(message.chat.id, "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ‚ùå–û—Ç–º–µ–Ω–∞, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=markup)


def cancel(message, menu_function):

    bot.send_message(message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu_markup())
    menu_function()


def process_cancel_or_twitter_id(message):
    if message.text == "‚ùå–û—Ç–º–µ–Ω–∞":
        cancel(message, main_menu_markup)
    elif message.text.startswith("@"):
        process_twitter_id(message)


def send_bonus(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    bot.send_photo(message.chat.id, photo=open('photo_2024-04-13_15-11-53.jpg', 'rb'),
                   caption="–ü–æ–º–Ω–æ–∂—å –±–∞–ª–∞–Ω—Å –Ω–∞ 2, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –±–æ–Ω—É—Å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π —Ç–≤–∏—Ç—Ç–µ—Ä ID\n\n "
                           "–í–∞–∂–Ω–æ! –ë–∞–ª–∞–Ω—Å —É–º–Ω–æ–∂–∏—Ç—Å—è –Ω–∞ 2 –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è AIRDROP!\n\n"
                           "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à Twitter ID (–Ω–∞–ø—Ä–∏–º–µ—Ä, @example_username):",
                   reply_markup=markup)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
    send_cancel_button(message)
    if message.text.startswith("@"):
        bot.register_next_step_handler(message, process_twitter_id)

    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Twitter ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def process_twitter_id(message):
    user_id = message.from_user.id
    twitter_id = message.text
    db.set_twitter_id(user_id, twitter_id)
    bot.send_message(message.chat.id, f"–í–∞—à Twitter ID {twitter_id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")
    db.set_repost_status(1,user_id)
    # –ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Twitter ID –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    bot.send_message(message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu_markup())




def invite_friend_markup(message):
    link = f"https://t.me/Pepecryptocurrencybot?start={message.chat.id}"
    markup = types.InlineKeyboardMarkup(row_width=1)
    invite_button = types.InlineKeyboardButton(text="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞/invite", switch_inline_query=link)
    markup.add(invite_button)
    return markup


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /invite
@bot.message_handler(commands=['invite'])
def invite_friend(message):
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞:", reply_markup=invite_friend_markup())


def wallet_message(message):
    bot.send_message(message.chat.id, "–ù–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...")
@bot.message_handler(commands=["menu"])
def menu(message):
    bot.send_message(message.chat.id, "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu_markup())

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.text == "–£—Å–ª–æ–≤–∏—è/Termsüìë":
        send_terms(message)
    elif message.text == "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞/invite":
        invite_friend(message)
    elif message.text == "Terms [ENG]":
        send_terms_eng(message)
    elif message.text == "–ë–∞–ª–∞–Ω—Å/Balanceüê∏":
        send_balance(message)
    elif message.text == "–ö–æ—à–µ–ª–µ–∫/Walletüëõ":
        wallet_message(message)
    elif message.text == "Twitter [BONUS]üê¶":
        send_bonus(message)
    else:
        process_cancel_or_twitter_id(message)




@bot.message_handler(func=lambda message: message.text.startswith("https://x.com/"))
def handle_repost_link(message):
    bot.send_message(message.chat.id, "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–ø–æ—Å—Ç. –ü—Ä–æ–≤–µ—Ä—è—é...")
    process_repost_link(message)

bot.polling(none_stop=True)